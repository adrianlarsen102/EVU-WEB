name: Release

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

jobs:
  release:
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.head_commit.message, 'chore(release):') && !startsWith(github.ref, 'refs/heads/release/') }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'

      - name: Install dependencies
        run: npm ci

      - name: Configure Git
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"

      - name: Clean up existing tags
        run: |
          # Get next version without creating it
          NEXT_VERSION=$(node -e "const pkg = require('./package.json'); const parts = pkg.version.split('.'); parts[2] = parseInt(parts[2]) + 1; console.log(parts.join('.'))")
          TAG_NAME="v$NEXT_VERSION"

          # Delete local tag if exists
          git tag -d "$TAG_NAME" 2>/dev/null || true

          # Delete remote tag if exists
          git push origin --delete "$TAG_NAME" 2>/dev/null || true

          echo "Cleaned up tag: $TAG_NAME"

      - name: Run release
        run: npm run release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get version
        id: version
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Create release branch and push
        run: |
          BRANCH_NAME="release/v${{ steps.version.outputs.version }}"
          git checkout -b "$BRANCH_NAME"
          git push origin "$BRANCH_NAME"
          git push --tags

      - name: Create Pull Request
        uses: repo-sync/pull-request@v2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          source_branch: release/v${{ steps.version.outputs.version }}
          destination_branch: main
          pr_title: "chore(release): v${{ steps.version.outputs.version }}"
          pr_body: |
            ## Release v${{ steps.version.outputs.version }}

            Automated release created by GitHub Actions.

            ### Changes
            See [CHANGELOG.md](https://github.com/${{ github.repository }}/blob/release/v${{ steps.version.outputs.version }}/CHANGELOG.md) for details.

            ---
            **Auto-merge:** Please review and merge this PR to complete the release.
          pr_label: "release,automated"
          pr_assignee: ${{ github.actor }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.version.outputs.version }}
          name: Release v${{ steps.version.outputs.version }}
          body_path: CHANGELOG.md
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
